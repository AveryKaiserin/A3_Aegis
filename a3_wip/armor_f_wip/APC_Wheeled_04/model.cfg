class CfgSkeletons
{
    class Default
    {
        isDiscrete = true;
        skeletonInherit = "";
        skeletonBones[] = {};
    };
	class Vehicle: Default{};
    class Car: Vehicle
    {
		isDiscrete = true;
		skeletonInherit = Vehicle;
        skeletonBones[] =
        {
            drivewheel,"",

            wheel_1_1_damper_land,"",
            wheel_1_2_damper_land,"",
            wheel_1_3_damper_land,"",
            wheel_1_4_damper_land,"",

            wheel_2_1_damper_land,"",
            wheel_2_2_damper_land,"",
            wheel_2_3_damper_land,"",
            wheel_2_4_damper_land,"",

            wheel_1_1_damper,wheel_1_1_damper_land,
            wheel_1_2_damper,wheel_1_2_damper_land,
            wheel_1_3_damper,wheel_1_3_damper_land,
            wheel_1_4_damper,wheel_1_4_damper_land,

            wheel_2_1_damper,wheel_2_1_damper_land,
            wheel_2_2_damper,wheel_2_2_damper_land,
            wheel_2_3_damper,wheel_2_3_damper_land,
            wheel_2_4_damper,wheel_2_4_damper_land,

            wheel_1_1_steering,wheel_1_1_damper,
            wheel_1_2_steering,wheel_1_2_damper,
            wheel_1_3_steering,wheel_1_3_damper,
            wheel_1_4_steering,wheel_1_4_damper,

            wheel_2_1_steering,wheel_2_1_damper,
            wheel_2_2_steering,wheel_2_2_damper,
            wheel_2_3_steering,wheel_2_3_damper,
            wheel_2_4_steering,wheel_2_4_damper,

            wheel_1_1,wheel_1_1_steering,
            wheel_1_2,wheel_1_2_steering,
            wheel_1_3,wheel_1_3_steering,
            wheel_1_4,wheel_1_4_steering,

            wheel_2_1,wheel_2_1_steering,
            wheel_2_2,wheel_2_2_steering,
            wheel_2_3,wheel_2_3_steering,
            wheel_2_4,wheel_2_4_steering,

            wheel_1_1_unhide,wheel_1_1,
            wheel_1_2_unhide,wheel_1_2,
            wheel_1_3_unhide,wheel_1_3,
            wheel_1_4_unhide,wheel_1_4,

            wheel_2_1_unhide,wheel_2_1,
            wheel_2_2_unhide,wheel_2_2,
            wheel_2_3_unhide,wheel_2_3,
            wheel_2_4_unhide,wheel_2_4,

            wheel_1_1_hide,wheel_1_1,
            wheel_1_2_hide,wheel_1_2,
            wheel_1_3_hide,wheel_1_3,
            wheel_1_4_hide,wheel_1_4,

            wheel_2_1_hide,wheel_2_1,
            wheel_2_2_hide,wheel_2_2,
            wheel_2_3_hide,wheel_2_3,
            wheel_2_4_hide,wheel_2_4,

            OtocVez,"",
            OtocHlaven,OtocVez,

            damageHide,"",
            damageVez,OtocVez,
            damageHlaven,OtocHlaven,
            glass1,damageHide,
            glass2,damageHide,
            glass3,damageHide,
            glass4,damageHide,

            ukaz_rychlo,"",
            ukaz_rychlo2,"",
            ukaz_rpm,"",
            mph,"",
            rpm,"",
            fuel,"",
            fuel_01,"",
            fuel_1,"",
            fuel_2,"",
            fuel_3,"",
            prop_01,"",
            prop_02,"",
            prop_1,"",
            prop_2,""
        };
    };
    class APC_Wheeled_04_base_F_skeleton: Car
    {
		isDiscrete = true;
		skeletonInherit = Car;
        skeletonBones[] =
        {
            OtocVelitele,OtocVez,
            OtocHlavenVelitele,OtocVelitele,
            hatch_commander,OtocVelitele,
            hatch_driver,"",
            hatch_gunner,OtocVez,

            daylights,damageHide,
            reverse_light,damageHide,
            rearlights,damageHide,

            driver_seat,"",
            pedal_thrust,"",
            pedal_brake,"",
            prop_3,""
        };
    };
    class APC_Wheeled_04_cannon_F_skeleton: APC_Wheeled_04_base_F_skeleton
    {
        isDiscrete = true;
        skeletonInherit = APC_Wheeled_04_base_F_skeleton;
        skeletonBones[] =
        {
            Barrel_L,OtocHlaven,
            Barrel_R,OtocHlaven,

            zasleh_1,Barrel_L,
            zasleh_2,Barrel_R,
            zasleh_3,OtocHlaven
        };
    };
};
class CfgModels
{
	class Default
	{
        sectionsInherit = "";
        sections[] = {};
        skeletonName = "";
	};
    class Vehicle: Default
    {
		sectionsInherit = Default;
        sections[] =
        {
            cislo,
            grupa,
            side,
            sektor,
            clan,
            clan_sign,
            "podsvit pristroju",
            poskozeni,
            Light_R,
            Light_L,
            zasleh
        };
		skeletonName = Vehicle;
    };  
    class Car: Vehicle
    {
		sectionsInherit = Vehicle;
        htMin = 60;     // Minimum half-cooling time (in seconds)
        htMax = 180;    // Maximum half-cooling time (in seconds)
        afMax = 100;    // Maximum temperature in case the model is alive (in celsius)
        mfMax = 8;      // Maximum temperature when the model is moving (in celsius)
        mFact = 1;      // Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
        tBody = 150;    // Metabolism temperature of the model (in celsius)
        sections[]=
        {
            ammo,
            "zadni svetlo",
            "brzdove svetlo",
            spz,
            motor,
            body,
            clan,
            clan_sign,
            zasleh,
            Light_R,
            Light_L,
            "podsvit pristroju",
            glass1,
            glass2,
            glass3,
            glass4,
            glass5,
            glass6
        };
		skeletonName = Car;
        class Animations
        {
            // destruct START
            class damageHide
            {
                type="hide";
                source="damage";
                selection="damageHide";
                hideValue=1;
            };
            class damageHideVez:damageHide
            {
                selection="OtocVez";
            };
            class damageHideHlaven:damageHide
            {
                selection="OtocHlaven";
            };

            // Wheels START
            // Wheels Complete Destruct START
            class wheel_1_1_destruct
            {
                type="hide";
                selection="wheel_1_1_hide";
                source="HitLFWheel";
                minValue = 0; // upravit na 0.99
                maxValue = 1; // upravit na 1.0
                hidevalue = 0.99999;
            };
            class wheel_1_2_destruct:wheel_1_1_destruct {source="HitLBWheel";selection="wheel_1_2_hide";};
            class wheel_1_3_destruct:wheel_1_1_destruct {source="HitLMWheel";selection="wheel_1_3_hide";};
            class wheel_1_4_destruct:wheel_1_1_destruct {source="HitLF2Wheel";selection="wheel_1_4_hide";};

            class wheel_2_1_destruct:wheel_1_1_destruct {source="HitRFWheel";selection="wheel_2_1_hide";};
            class wheel_2_2_destruct:wheel_1_1_destruct {source="HitRBWheel";selection="wheel_2_2_hide";};
            class wheel_2_3_destruct:wheel_1_1_destruct {source="HitRMWheel";selection="wheel_2_3_hide";};
            class wheel_2_4_destruct:wheel_1_1_destruct {source="HitRF2Wheel";selection="wheel_2_4_hide";};

            class wheel_1_1_destruct_unhide
            {
                type="hide";
                selection="wheel_1_1_unhide";
                source="HitLFWheel";
                minValue = 0; 
                maxValue = 1; 
                hidevalue = 0;
                UnHidevalue = 1;
            };
            class wheel_1_2_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLBWheel";selection="wheel_1_2_unhide";};
            class wheel_1_3_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLMWheel";selection="wheel_1_3_unhide";};
            class wheel_1_4_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLF2Wheel";selection="wheel_1_4_unhide";};

            class wheel_2_1_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRFWheel";selection="wheel_2_1_unhide";};
            class wheel_2_2_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRBWheel";selection="wheel_2_2_unhide";};
            class wheel_2_3_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRMWheel";selection="wheel_2_3_unhide";};
            class wheel_2_4_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRF2Wheel";selection="wheel_2_4_unhide";};

            // Wheels Complete Destruct END

            #define DamageOffset 0.2

            // Wheels Damage START
            class wheel_1_1_Damage:wheel_1_1_destruct
            {
                type="translation";
                axis="Basic_Damper_Destruct_Axis";
                memory=1;
                selection="wheel_1_1_damper";
                source="HitLFWheel";
                minValue = 0;
                maxValue = 1;
                offset0 = 0;
                offset1 = DamageOffset;
            };
            class wheel_1_2_Damage:wheel_1_1_Damage {source="HitLBWheel";selection="wheel_1_2_damper";};
            class wheel_1_3_Damage:wheel_1_1_Damage {source="HitLMWheel";selection="wheel_1_3_damper";};
            class wheel_1_4_Damage:wheel_1_1_Damage {source="HitLF2Wheel";selection="wheel_1_4_damper";};

            class wheel_2_1_Damage:wheel_1_1_Damage {source="HitRFWheel";selection="wheel_2_1_damper";};
            class wheel_2_2_Damage:wheel_1_1_Damage {source="HitRBWheel";selection="wheel_2_2_damper";};
            class wheel_2_3_Damage:wheel_1_1_Damage {source="HitRMWheel";selection="wheel_2_3_damper";};
            class wheel_2_4_Damage:wheel_1_1_Damage {source="HitRF2Wheel";selection="wheel_2_4_damper";};


            class wheel_1_1_Damper_Damage_BackAnim:wheel_1_1_Damage {selection="wheel_1_1_damper";offset1 = -1.2*DamageOffset;};
            class wheel_1_2_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLBWheel";selection="wheel_1_2_damper";};
            class wheel_1_3_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLMWheel";selection="wheel_1_3_damper";};
            class wheel_1_4_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLF2Wheel";selection="wheel_1_4_damper";};

            class wheel_2_1_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRFWheel";selection="wheel_2_1_damper";};
            class wheel_2_2_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRBWheel";selection="wheel_2_2_damper";};
            class wheel_2_3_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRMWheel";selection="wheel_2_3_damper";};
            class wheel_2_4_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRF2Wheel";selection="wheel_2_4_damper";};

            // Wheels Damage END
            // Wheels END

                //Glass Damage START
                class Glass1_destruct
                {
                type="hide";
                selection="glass1";
                source="HitGlass1";
                minValue = 0; 
                maxValue = 1; 
                hidevalue = 0.99999;
                };
                class Glass2_destruct:Glass1_destruct{selection="glass2";source="HitGlass2";};
                class Glass3_destruct:Glass1_destruct{selection="glass3";source="HitGlass3";};
                class Glass4_destruct:Glass1_destruct{selection="glass4";source="HitGlass4";};
                class Glass5_destruct:Glass1_destruct{selection="glass5";source="HitGlass5";};
                class Glass6_destruct:Glass1_destruct{selection="glass6";source="HitGlass6";};
                //Glass Damage END

            // destruct END
            class Fuel
            {
                source="fuel";
                selection="fuel";
                axis="fuel_axis";
                maxValue=1;
                memory=1;
                angle0="rad -110";
                angle1=0;
            };
            class IndicatorSpeed
            {
                source="speed";
                selection="mph";
                axis="mph_axis";
                memory=1;
                maxValue=38.900002;
                angle1="rad -265";
            };
            class IndicatorFuel
            {
                type="rotation";
                source="fuel";
                selection="fuel_1";
                axis="fuel_1_axis";
                memory=1;
                minValue=0;
                maxValue=1;
                angle0=-0.087266;
                angle1=-1.658063;
            };
            class IndicatorRPM
            {
                source="rpm";
                selection="rpm";
                axis="rpm_axis";
                memory=1;
                angle1="rad 80";
            };
            class DrivingWheel
            {
                source="drivingWheel";
                selection="drivewheel";
                axis="drivewheel_axis";
                minValue=-1;
                maxValue=1;
                angle0=(rad 80);
                angle1=(rad -80);
            };
            class Steering_1_1
            {
                type="rotationY";
                source="drivingWheel";
                selection="wheel_1_1_steering";
                axis="wheel_1_1_steering_axis";
                memory=1;
                minValue= -1;
                maxValue= 1;
                angle0=(rad 50);
                angle1=(rad -50);
            };
            class Steering_2_1: Steering_1_1
            {
                selection="wheel_2_1_steering";
                axis="wheel_2_1_steering_axis";
            };
            class Wheel_1_1
            {
                type="rotationX";
                source="wheel";
                selection="wheel_1_1";
                axis="wheel_1_1_axis";
                memory=1;
                sourceAddress="loop";
                minValue=0;
                maxValue=1;
                angle0=0;
                angle1="rad -360";
            };
            class wheel_2_1: Wheel_1_1
            {
                selection="wheel_2_1";
                axis="wheel_2_1_axis";
            };
            class wheel_1_2: Wheel_1_1
            {
                selection="wheel_1_2";
                axis="wheel_1_2_axis";
            };
            class wheel_1_3: Wheel_1_1
            {
                selection="wheel_1_3";
                axis="wheel_1_3_axis";
            };
            class Wheel_2_2: Wheel_1_1
            {
                selection="wheel_2_2";
                axis="wheel_2_2_axis";
            };
            class Wheel_2_3: Wheel_1_1
            {
                selection="wheel_2_3";
                axis="wheel_2_3_axis";
            };
            class Wheel_1_4: Wheel_1_1
            {
                selection="wheel_1_4";
                axis="wheel_1_4_axis";
            };
            class Wheel_2_4: Wheel_1_1
            {
                selection="wheel_2_4";
                axis="wheel_2_4_axis";
            };
            class Wheel_1_1_Damper
            {
                type="translation";
                source="damper";
                selection="wheel_1_1_damper_land";
                axis="posun wheel_1_1";
                animPeriod = 1;
                minValue="0";
                maxValue="1";
                offset0= "0.5";
                offset1= "-0.5";
                memory=1;
            };
            class wheel_2_1_Damper: Wheel_1_1_Damper
            {
                selection="wheel_2_1_damper_land";
            };
            class wheel_1_2_Damper: Wheel_1_1_Damper
            {
                selection="wheel_1_2_damper_land";
            };
            class Wheel_2_2_Damper: Wheel_1_1_Damper
            {
                selection="wheel_2_2_damper_land";
            };
            class Wheel_1_3_Damper: Wheel_1_1_Damper
            {
                selection="wheel_1_3_damper_land";
            };
            class Wheel_1_4_Damper: Wheel_1_1_Damper
            {
                selection="wheel_1_4_damper_land";
            };
            class Wheel_2_3_Damper: Wheel_1_1_Damper
            {
                selection="wheel_2_3_damper_land";
            };
            class Wheel_2_4_Damper: Wheel_1_1_Damper
            {
                selection="wheel_2_4_damper_land";
            };
            class daylights
            {
                type="hide";
                source="rpm";
                selection="daylights";
                minValue=-0.8;
                maxValue=0.2;
                unhidevalue=1;
                sourceAddress="clamp";
            };
            
            class reverse_light
            {
                type="Hide";
                selection="Light_Reverse";
                sourceAddress="clamp";
                source="Gear";
                minValue = -1;
                maxValue = 0;
                hideValue = 0.2;
            };              
        };
    };
    class APC_Wheeled_04_base_F: Car
    {
		sectionsInherit = Car;
        sections[] =
        {
            // Damage visuals
            vez,
            zbran,
            zbytek,

            // Texture selections
            Camo1,
            Camo2,

            // Lights

            // Muzzle flashes
            zasleh_1,
            zasleh_2
        };
		skeletonName = APC_Wheeled_04_base_F_skeleton;
        class Animations: Animations
        {
            // Dampers Destruct START
            #undef DamageOffset
            #define DamageOffset 0.22

            class wheel_1_1_Damage:wheel_1_1_Damage {offset1 = DamageOffset;};
            class wheel_1_2_Damage:wheel_1_2_Damage {offset1 = DamageOffset;};
            class wheel_1_3_Damage:wheel_1_3_Damage {offset1 = DamageOffset;};
            class wheel_1_4_Damage:wheel_1_4_Damage {offset1 = DamageOffset;};

            class wheel_2_1_Damage:wheel_2_1_Damage {offset1 = DamageOffset;};
            class wheel_2_2_Damage:wheel_2_2_Damage {offset1 = DamageOffset;};
            class wheel_2_3_Damage:wheel_2_3_Damage {offset1 = DamageOffset;};
            class wheel_2_4_Damage:wheel_2_4_Damage {offset1 = DamageOffset;};
            // Dampers Destruct END

            // animace damper smerem nahoru START
            class wheel_1_1_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
            class wheel_1_2_Damper_Damage_BackAnim:wheel_1_2_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
            class wheel_1_3_Damper_Damage_BackAnim:wheel_1_3_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
            class wheel_1_4_Damper_Damage_BackAnim:wheel_1_4_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};

            class wheel_2_1_Damper_Damage_BackAnim:wheel_2_1_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
            class wheel_2_2_Damper_Damage_BackAnim:wheel_2_2_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
            class wheel_2_3_Damper_Damage_BackAnim:wheel_2_3_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
            class wheel_2_4_Damper_Damage_BackAnim:wheel_2_4_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
            // animace damper smerem nahoru END

            class Fuel
            {
                source="fuel";
                selection="fuel";
                axis="fuel_axis";
                memory=1;
                maxValue=1;
                angle0=0;
                angle1=rad 100;
            };
            class IndicatorSpeed
            {
                source="speed";
                selection="mph";
                axis="mph_axis";
                memory=1;
                maxValue=90;
                angle0=0;
                angle1=rad 270;
            };
            class IndicatorRPM
            {
                source="rpm";
                selection="rpm";
                axis="rpm_axis";
                memory=1;
                maxvalue = 1;
                angle0=0;
                angle1=rad 230;
            };
            class prop1: IndicatorRPM
            {
                selection="prop_1";
                axis="prop_1_axis";
                memory=1;
                maxvalue = 0.1;
                angle0=-rad 90;
                angle1=0;
            };
            class prop2: prop1
            {
                selection="prop_2";
                axis="prop_2_axis";
                memory=1;
                maxvalue = 0.2;
                angle0=0;
                angle1=rad 60;
            };
            class prop3: prop2
            {
                selection="prop_3";
                axis="prop_3_axis";
                memory=1;
                angle1=rad 45;
            };
            class DrivingWheel
            {
                source="drivingWheel";
                selection="drivewheel";
                axis="drivewheel_axis";
                memory=1;
                minValue=-1;
                maxValue=1;
                angle0="rad 80";
                angle1="rad -80";
            };
            class Steering_1_2: Steering_1_1
            {
                selection="wheel_1_2_steering";
                axis="wheel_1_2_steering_axis";
            };
            class Steering_2_2: Steering_1_1
            {
                selection="wheel_2_2_steering";
                axis="wheel_2_2_steering_axis";
            };
            class MainTurret
            {
                type="rotationY";
                source="mainTurret";
                selection="OtocVez";
                axis="OsaVeze";
                animPeriod=0;
                minValue="rad -360";
                maxValue="rad +360";
                angle0="rad -360";
                angle1="rad +360";
            };
            class MainGun:MainTurret
            {
                type="rotationX";
                source="mainGun";
                selection="OtocHlaven";
                axis="OsaHlavne";
            };
            class HatchGunner
            {
                source="hatchGunner";
                selection="hatch_gunner";
                axis="hatch_gunner_axis";
                memory=1;
                animPeriod=0;
                angle0="rad 0";
                angle1="rad -90";
            };
            class HatchDriver: HatchGunner
            {
                source="hatchdriver";
                selection="hatch_driver";
                axis="hatch_driver_axis";
                angle1="rad 90";
            };
            class driver_seat: HatchGunner
            {
                source="hatchdriver";
                selection="driver_seat";
                axis="driver_seat_axis";
                type="translation";
                memory=1;
                minValue=0.950000;
                maxValue=1;
                offset0=0;
                offset1=1.050000;
            };
            class damageHide
            {
                type="hide";
                source="damage";
                selection="damageHide";
            };
            class DamageVez:damageHide
            {
                selection="DamageVez";
            };
            class DamageGunner:damageHide
            {
                selection="hatch_gunner";
            };
            class DamageDriver:damageHide
            {
                selection="hatch_driver";
            };
            class daylights
            {
				type = hide;
				source = rpm;
				selection = daylights;
				minValue = -0.8;
				maxValue = 0.2;
				hideValue = 0.2;
				unHideValue = 1;
			};
			class reverse_light
			{
				type = hide;
				source = gear;
				selection = reverse_light;
				minValue = -1;
				maxValue = 0;
				hideValue = 0.2;
                unHideValue = -1;
            };
            class pedal_thrust
            {
                type = rotation;
                source = throttle;
                selection = pedal_thrust;
                axis = pedal_thrust_axis;
                minValue = 0;
                maxValue = 1;
                angle0 = 0;
                angle1 = -0.5235988;
            };
            class pedal_brake: pedal_thrust
            {
                source = brake;
                selection = pedal_brake;
                axis = pedal_brake_axis;
                minValue = 0;
                maxValue = 0.5;
            };  
        };
    };
    class APC_Wheeled_04_cannon_F: APC_Wheeled_04_base_F
    {
		sectionsInherit = APC_Wheeled_04_base_F;
        sections[] = {};
		skeletonName = APC_Wheeled_04_cannon_F_skeleton;
        class Animations: Animations
        {
            class ObsTurret
            {
                type="rotationY";
                source="obsTurret";
                selection="OtocVelitele";
                axis="OsaVelitele";
                animPeriod=0;
                minValue="rad -360";
                maxValue="rad +360";
                angle0="rad -360";
                angle1="rad +360";
            };
            class ObsGun: ObsTurret
            {
                type="rotationX";
                source="obsGun";
                selection="OtocHlavenVelitele";
                axis="OsaHlavneVelitele";
            };
            class HatchCommander: HatchGunner
            {
                source="hatchCommander";
                selection="hatch_commander";
                axis="hatch_commander_axis";
                angle1="rad -90";
            };
            class recoil_BEGIN
            {
                type="translation";
                source="recoil_source";
                selection="RecoilHlaven";
                axis="RecoilHlaven_axis";
                memory=1;
                minValue=0.5;
                maxValue=0.8;
                offset0=0;
                offset1=-0.2;
            };
            class recoil_END:recoil_BEGIN
            {
                minValue=0.85;
                maxValue=1;
                offset0=0;
                offset1=0.2;
            };
            class DamageCommander:damageHide
            {
                selection="OtocVelitele";
            };
            class zaslehROT_2A42 {
                type="rotationZ";
                source="muzzle_rot_2A42";
                sourceAddress="mirror";
                selection="muzzleFlash2A42";
                axis="";
                centerFirstVertex=true;
                minValue=0;
                maxValue=4;
                angle0="rad 0";
                angle1="rad 360";
                memory = 1;
            };
            class zaslehHIDE_2A42
            {
                type = "hide";
                selection = "muzzleFlash2A42";
                source = "muzzle_hide_2A42";
                minValue = 0;
                maxValue = 1;
                hideValue = 0;
                unhideValue = 0.3;
            };
            class zaslehROT_GMG {
                type="rotationZ";
                source="muzzle_rot_GMG";
                sourceAddress="mirror";
                selection="muzzleFlashGMG";
                axis="";
                centerFirstVertex=true;
                minValue=0;
                maxValue=4;
                angle0="rad 0";
                angle1="rad 360";
                memory = 1;
            };
            class zaslehHIDE_GMG
            {
                type = "hide";
                selection = "muzzleFlashGMG";
                source = "muzzle_hide_GMG";
                minValue = 0;
                maxValue = 1;
                hideValue = 0;
                unhideValue = 0.3;
            };
        };
    };
};