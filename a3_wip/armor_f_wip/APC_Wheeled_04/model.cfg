class CfgSkeletons
{
  class Default
  {
    isDiscrete = 1;
    skeletonInherit = "";
    skeletonBones[] = {};
  };
  class Vehicle : Default {};
  class Car : Vehicle {
    skeletonBones[]=
    {
      "drivewheel","",

      "wheel_1_1_damper_land","",
      "wheel_1_2_damper_land","",
      "wheel_1_3_damper_land","",
      "wheel_1_4_damper_land","",

      "wheel_2_1_damper_land","",
      "wheel_2_2_damper_land","",
      "wheel_2_3_damper_land","",
      "wheel_2_4_damper_land","",

      "wheel_1_1_damper","wheel_1_1_damper_land",
      "wheel_1_2_damper","wheel_1_2_damper_land",
      "wheel_1_3_damper","wheel_1_3_damper_land",
      "wheel_1_4_damper","wheel_1_4_damper_land",

      "wheel_2_1_damper","wheel_2_1_damper_land",
      "wheel_2_2_damper","wheel_2_2_damper_land",
      "wheel_2_3_damper","wheel_2_3_damper_land",
      "wheel_2_4_damper","wheel_2_4_damper_land",

      "wheel_1_1_steering","wheel_1_1_damper",
      "wheel_1_2_steering","wheel_1_2_damper",
      "wheel_1_3_steering","wheel_1_3_damper",
      "wheel_1_4_steering","wheel_1_4_damper",

      "wheel_2_1_steering","wheel_2_1_damper",
      "wheel_2_2_steering","wheel_2_2_damper",
      "wheel_2_3_steering","wheel_2_3_damper",
      "wheel_2_4_steering","wheel_2_4_damper",

      "wheel_1_1","wheel_1_1_steering",
      "wheel_1_2","wheel_1_2_steering",
      "wheel_1_3","wheel_1_3_steering",
      "wheel_1_4","wheel_1_4_steering",

      "wheel_2_1","wheel_2_1_steering",
      "wheel_2_2","wheel_2_2_steering",
      "wheel_2_3","wheel_2_3_steering",
      "wheel_2_4","wheel_2_4_steering",

      "wheel_1_1_unhide","wheel_1_1",
      "wheel_1_2_unhide","wheel_1_2",
      "wheel_1_3_unhide","wheel_1_3",
      "wheel_1_4_unhide","wheel_1_4",

      "wheel_2_1_unhide","wheel_2_1",
      "wheel_2_2_unhide","wheel_2_2",
      "wheel_2_3_unhide","wheel_2_3",
      "wheel_2_4_unhide","wheel_2_4",

      "wheel_1_1_hide","wheel_1_1",
      "wheel_1_2_hide","wheel_1_2",
      "wheel_1_3_hide","wheel_1_3",
      "wheel_1_4_hide","wheel_1_4",

      "wheel_2_1_hide","wheel_2_1",
      "wheel_2_2_hide","wheel_2_2",
      "wheel_2_3_hide","wheel_2_3",
      "wheel_2_4_hide","wheel_2_4",

      "OtocVez","",
      "OtocHlaven","OtocVez",

      "damageHide","",
      "damageVez","OtocVez",
      "damageHlaven","OtocHlaven",

      "ukaz_rychlo","",
      "ukaz_rychlo2","",
      "ukaz_rpm","",
      "mph","",
      "rpm","",
      "fuel","",
      "fuel_1","",
      "fuel_01","",
      "fuel_2","",
      "fuel_3","",
      "prop_01","",
      "prop_02","",
      "prop_2","",
      "prop_1","",
      "glass1","damageHide",
      "glass2","damageHide",
      "glass3","damageHide",
      "glass4","damageHide"
    };
  };
  class CUP_BTR90Skeleton_base: Car
  {
    skeletonInherit="Car";
    skeletonBones[]=
    {
      "reverse_light","",
      "Light_Reverse", "",
      "daylights","damageHide",
      "driver_seat","",
      "prop_3","",
      "otocvelitele","OtocVez",
      "OtocHlavenVelitele","otocvelitele",
      "hatch_commander","otocvelitele",
      "hatch_gunner","OtocVez",
      "hatch_driver","",
      "RecoilHlaven","otocHlaven",
      "muzzleFlashHMG", "RecoilHlaven",
      "muzzleFlashGMG", "OtocVez",
      "muzzleFlash2A42", "RecoilHlaven"
    };
  };
  class CUP_BTR90Skeleton:CUP_BTR90Skeleton_base
  {
    skeletonInherit="CUP_BTR90Skeleton_base";
    skeletonBones[]={};
  };
  class CUP_BTRHQSkeleton: CUP_BTR90Skeleton_base
  {
    skeletonInherit="CUP_BTR90Skeleton_base";
    skeletonBones[]=
    {
      "antena1","",
      "pnevmo1","",
      "antena2","antena1",
      "antena3","antena2",
      "antena4","antena3",
      "antena5","antena3",
      "pnevmo2","antena1",
      "muzzleFlashPKT", "otocHlaven"
    };
  };
};

class CfgModels
{
  class Default
  {
    sectionsInherit = "";
    sections[] = {};
    skeletonName = "";
  };
  class Vehicle: Default
  {
    sections[] =
    {
      "cislo",
      "grupa",
      "side",
      "sektor",
      "clan",
      "clan_sign",
      "podsvit pristroju",
      "poskozeni",
      "Light_R",
      "Light_L",
      "zasleh"
    };
  };  
  
  class Car: Vehicle
  {
    htMin = 60;    // Minimum half-cooling time (in seconds)
    htMax = 180;  // Maximum half-cooling time (in seconds)
    afMax = 100;  // Maximum temperature in case the model is alive (in celsius)
    mfMax = 8;    // Maximum temperature when the model is moving (in celsius)
    mFact = 1;    // Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
    tBody = 150;  // Metabolism temperature of the model (in celsius)

    sections[]=
    {
      "ammo",
      "zadni svetlo",
      "brzdove svetlo",
      "spz",
      "motor",
      "body",
      "clan",
      "clan_sign",
      "zasleh",
      "Light_R",
      "Light_L",
      "podsvit pristroju",
      "glass1",
      "glass2",
      "glass3",
      "glass4",
      "glass5",
      "glass6"
    };
    skeletonName="Car";
    class Animations
    {
      // destruct START
      class damageHide
      {
        type="hide";
        source="damage";
        selection="damageHide";
        hideValue=1;
      };
      class damageHideVez:damageHide
      {
        selection="OtocVez";
      };
      class damageHideHlaven:damageHide
      {
        selection="OtocHlaven";
      };

      // Wheels START
      // Wheels Complete Destruct START
      class wheel_1_1_destruct
      {
        type="hide";
        selection="wheel_1_1_hide";
        source="HitLFWheel";
        minValue = 0; // upravit na 0.99
        maxValue = 1; // upravit na 1.0
        hidevalue = 0.99999;
      };
      class wheel_1_2_destruct:wheel_1_1_destruct {source="HitLBWheel";selection="wheel_1_2_hide";};
      class wheel_1_3_destruct:wheel_1_1_destruct {source="HitLMWheel";selection="wheel_1_3_hide";};
      class wheel_1_4_destruct:wheel_1_1_destruct {source="HitLF2Wheel";selection="wheel_1_4_hide";};

      class wheel_2_1_destruct:wheel_1_1_destruct {source="HitRFWheel";selection="wheel_2_1_hide";};
      class wheel_2_2_destruct:wheel_1_1_destruct {source="HitRBWheel";selection="wheel_2_2_hide";};
      class wheel_2_3_destruct:wheel_1_1_destruct {source="HitRMWheel";selection="wheel_2_3_hide";};
      class wheel_2_4_destruct:wheel_1_1_destruct {source="HitRF2Wheel";selection="wheel_2_4_hide";};

      class wheel_1_1_destruct_unhide
      {
        type="hide";
        selection="wheel_1_1_unhide";
        source="HitLFWheel";
        minValue = 0; 
        maxValue = 1; 
        hidevalue = 0;
        UnHidevalue = 1;
      };
      class wheel_1_2_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLBWheel";selection="wheel_1_2_unhide";};
      class wheel_1_3_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLMWheel";selection="wheel_1_3_unhide";};
      class wheel_1_4_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLF2Wheel";selection="wheel_1_4_unhide";};

      class wheel_2_1_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRFWheel";selection="wheel_2_1_unhide";};
      class wheel_2_2_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRBWheel";selection="wheel_2_2_unhide";};
      class wheel_2_3_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRMWheel";selection="wheel_2_3_unhide";};
      class wheel_2_4_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRF2Wheel";selection="wheel_2_4_unhide";};

      // Wheels Complete Destruct END

      #define DamageOffset 0.2

      // Wheels Damage START
      class wheel_1_1_Damage:wheel_1_1_destruct
      {
        type="translation";
        axis="Basic_Damper_Destruct_Axis";
        memory=1;
        selection="wheel_1_1_damper";
        source="HitLFWheel";
        minValue = 0;
        maxValue = 1;
        offset0 = 0;
        offset1 = DamageOffset;
      };
      class wheel_1_2_Damage:wheel_1_1_Damage {source="HitLBWheel";selection="wheel_1_2_damper";};
      class wheel_1_3_Damage:wheel_1_1_Damage {source="HitLMWheel";selection="wheel_1_3_damper";};
      class wheel_1_4_Damage:wheel_1_1_Damage {source="HitLF2Wheel";selection="wheel_1_4_damper";};

      class wheel_2_1_Damage:wheel_1_1_Damage {source="HitRFWheel";selection="wheel_2_1_damper";};
      class wheel_2_2_Damage:wheel_1_1_Damage {source="HitRBWheel";selection="wheel_2_2_damper";};
      class wheel_2_3_Damage:wheel_1_1_Damage {source="HitRMWheel";selection="wheel_2_3_damper";};
      class wheel_2_4_Damage:wheel_1_1_Damage {source="HitRF2Wheel";selection="wheel_2_4_damper";};


      class wheel_1_1_Damper_Damage_BackAnim:wheel_1_1_Damage {selection="wheel_1_1_damper";offset1 = -1.2*DamageOffset;};
      class wheel_1_2_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLBWheel";selection="wheel_1_2_damper";};
      class wheel_1_3_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLMWheel";selection="wheel_1_3_damper";};
      class wheel_1_4_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLF2Wheel";selection="wheel_1_4_damper";};

      class wheel_2_1_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRFWheel";selection="wheel_2_1_damper";};
      class wheel_2_2_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRBWheel";selection="wheel_2_2_damper";};
      class wheel_2_3_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRMWheel";selection="wheel_2_3_damper";};
      class wheel_2_4_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRF2Wheel";selection="wheel_2_4_damper";};

      // Wheels Damage END
      // Wheels END

        //Glass Damage START
        class Glass1_destruct
        {
          type="hide";
          selection="glass1";
          source="HitGlass1";
          minValue = 0; 
          maxValue = 1; 
          hidevalue = 0.99999;
        };
        class Glass2_destruct:Glass1_destruct{selection="glass2";source="HitGlass2";};
        class Glass3_destruct:Glass1_destruct{selection="glass3";source="HitGlass3";};
        class Glass4_destruct:Glass1_destruct{selection="glass4";source="HitGlass4";};
        class Glass5_destruct:Glass1_destruct{selection="glass5";source="HitGlass5";};
        class Glass6_destruct:Glass1_destruct{selection="glass6";source="HitGlass6";};
        //Glass Damage END

      // destruct END
      class Fuel: Rotation
      {
        source="fuel";
        selection="fuel";
        axis="fuel_axis";
        maxValue=1;
        memory=1;
        angle0="rad -110";
        angle1=0;
      };
      class IndicatorSpeed: Rotation
      {
        source="speed";
        selection="mph";
        axis="mph_axis";
        memory=1;
        maxValue=38.900002;
        angle1="rad -265";
      };
      class IndicatorFuel: Rotation
      {
        type="rotation";
        source="fuel";
        selection="fuel_1";
        axis="fuel_1_axis";
        memory=1;
        minValue=0;
        maxValue=1;
        angle0=-0.087266;
        angle1=-1.658063;
      };
      class IndicatorRPM: Rotation
      {
        source="rpm";
        selection="rpm";
        axis="rpm_axis";
        memory=1;
        angle1="rad 80";
      };
      class DrivingWheel: Rotation
      {
        source="drivingWheel";
        selection="drivewheel";
        axis="drivewheel_axis";
        minValue=-1;
        maxValue=1;
        angle0=(rad 80);
        angle1=(rad -80);
      };
      class Steering_1_1
      {
        type="rotationY";
        source="drivingWheel";
        selection="wheel_1_1_steering";
        axis="wheel_1_1_steering_axis";
        memory=1;
        minValue= -1;
        maxValue= 1;
        angle0=(rad 50);
        angle1=(rad -50);
      };
      class Steering_2_1: Steering_1_1
      {
        selection="wheel_2_1_steering";
        axis="wheel_2_1_steering_axis";
      };
      class Wheel_1_1
      {
        type="rotationX";
        source="wheel";
        selection="wheel_1_1";
        axis="wheel_1_1_axis";
        memory=1;
        sourceAddress="loop";
        minValue=0;
        maxValue=1;
        angle0=0;
        angle1="rad -360";
      };
      class wheel_2_1: Wheel_1_1
      {
        selection="wheel_2_1";
        axis="wheel_2_1_axis";
      };
      class wheel_1_2: Wheel_1_1
      {
        selection="wheel_1_2";
        axis="wheel_1_2_axis";
      };
      class wheel_1_3: Wheel_1_1
      {
        selection="wheel_1_3";
        axis="wheel_1_3_axis";
      };
      class Wheel_2_2: Wheel_1_1
      {
        selection="wheel_2_2";
        axis="wheel_2_2_axis";
      };
      class Wheel_2_3: Wheel_1_1
      {
        selection="wheel_2_3";
        axis="wheel_2_3_axis";
      };
      class Wheel_1_4: Wheel_1_1
      {
        selection="wheel_1_4";
        axis="wheel_1_4_axis";
      };
      class Wheel_2_4: Wheel_1_1
      {
        selection="wheel_2_4";
        axis="wheel_2_4_axis";
      };
      class Wheel_1_1_Damper
      {
        type="translation";
        source="damper";
        selection="wheel_1_1_damper_land";
        axis="posun wheel_1_1";
        animPeriod = 1;
        minValue="0";
        maxValue="1";
        offset0= "0.5";
        offset1= "-0.5";
        memory=1;
      };
      class wheel_2_1_Damper: Wheel_1_1_Damper
      {
        selection="wheel_2_1_damper_land";
      };
      class wheel_1_2_Damper: Wheel_1_1_Damper
      {
        selection="wheel_1_2_damper_land";
      };
      class Wheel_2_2_Damper: Wheel_1_1_Damper
      {
        selection="wheel_2_2_damper_land";
      };
      class Wheel_1_3_Damper: Wheel_1_1_Damper
      {
        selection="wheel_1_3_damper_land";
      };
      class Wheel_1_4_Damper: Wheel_1_1_Damper
      {
        selection="wheel_1_4_damper_land";
      };
      class Wheel_2_3_Damper: Wheel_1_1_Damper
      {
        selection="wheel_2_3_damper_land";
      };
      class Wheel_2_4_Damper: Wheel_1_1_Damper
      {
        selection="wheel_2_4_damper_land";
      };
      class daylights
      {
        type="hide";
        source="rpm";
        selection="daylights";
        minValue=-0.8;
        maxValue=0.2;
        unhidevalue=1;
        sourceAddress="clamp";
      };
      
      class reverse_light
      {
        type="Hide";
        selection="Light_Reverse";
        sourceAddress="clamp";
        source="Gear";
        minValue = -1;
        maxValue = 0;
        hideValue = 0.2;
      };              
    };
  };
  
  class CUP_BTR90Base: Car
  {
    skeletonName="CUP_BTR90Skeleton";
    sectionsInherit="car";
    sections[]=
    {
      "vez",
      "zbytek",
      "muzzleFlashHMG",
      "muzzleFlash2A42",
      "muzzleFlashGMG",
      "Light_Rear",
      "Light_Brake",
      "Light_Reverse",
      "Light_Commander",
      "Light_Gunner",
      "Camo1",
      "Camo2"
    };
    class Animations:Animations
    {

      // Dampers Destruct START
      #undef DamageOffset
      #define DamageOffset 0.22

      class wheel_1_1_Damage:wheel_1_1_Damage {offset1 = DamageOffset;};
      class wheel_1_2_Damage:wheel_1_2_Damage {offset1 = DamageOffset;};
      class wheel_1_3_Damage:wheel_1_3_Damage {offset1 = DamageOffset;};
      class wheel_1_4_Damage:wheel_1_4_Damage {offset1 = DamageOffset;};

      class wheel_2_1_Damage:wheel_2_1_Damage {offset1 = DamageOffset;};
      class wheel_2_2_Damage:wheel_2_2_Damage {offset1 = DamageOffset;};
      class wheel_2_3_Damage:wheel_2_3_Damage {offset1 = DamageOffset;};
      class wheel_2_4_Damage:wheel_2_4_Damage {offset1 = DamageOffset;};
      // Dampers Destruct END

      // animace damper smerem nahoru START
      class wheel_1_1_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
      class wheel_1_2_Damper_Damage_BackAnim:wheel_1_2_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
      class wheel_1_3_Damper_Damage_BackAnim:wheel_1_3_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
      class wheel_1_4_Damper_Damage_BackAnim:wheel_1_4_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};

      class wheel_2_1_Damper_Damage_BackAnim:wheel_2_1_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
      class wheel_2_2_Damper_Damage_BackAnim:wheel_2_2_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
      class wheel_2_3_Damper_Damage_BackAnim:wheel_2_3_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
      class wheel_2_4_Damper_Damage_BackAnim:wheel_2_4_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
      // animace damper smerem nahoru END

      class Fuel: Rotation
      {
        source="fuel";
        selection="fuel";
        axis="fuel_axis";
        memory=1;
        maxValue=1;
        angle0=0;
        angle1=rad 100;
      };
      class IndicatorSpeed: Rotation
      {
        source="speed";
        selection="mph";
        axis="mph_axis";
        memory=1;
        maxValue=90;
        angle0=0;
        angle1=rad 270;
      };
      class IndicatorRPM: Rotation
      {
        source="rpm";
        selection="rpm";
        axis="rpm_axis";
        memory=1;
        maxvalue = 1;
        angle0=0;
        angle1=rad 230;
      };
      class prop1: IndicatorRPM
      {
        selection="prop_1";
        axis="prop_1_axis";
        memory=1;
        maxvalue = 0.1;
        angle0=-rad 90;
        angle1=0;
      };
      class prop2: prop1
      {
        selection="prop_2";
        axis="prop_2_axis";
        memory=1;
        maxvalue = 0.2;
        angle0=0;
        angle1=rad 60;
      };
      class prop3: prop2
      {
        selection="prop_3";
        axis="prop_3_axis";
        memory=1;
        angle1=rad 45;
      };
      class DrivingWheel: Rotation
      {
        source="drivingWheel";
        selection="drivewheel";
        axis="drivewheel_axis";
        memory=1;
        minValue=-1;
        maxValue=1;
        angle0="rad 80";
        angle1="rad -80";
      };
      class Steering_1_2: Steering_1_1
      {
        selection="wheel_1_2_steering";
        axis="wheel_1_2_steering_axis";
      };
      class Steering_2_2: Steering_1_1
      {
        selection="wheel_2_2_steering";
        axis="wheel_2_2_steering_axis";
      };
      class MainTurret
      {
        type="rotationY";
        source="mainTurret";
        selection="OtocVez";
        axis="OsaVeze";
        animPeriod=0;
        minValue="rad -360";
        maxValue="rad +360";
        angle0="rad -360";
        angle1="rad +360";
      };
      class MainGun:MainTurret
      {
        type="rotationX";
        source="mainGun";
        selection="OtocHlaven";
        axis="OsaHlavne";
      };
      class HatchGunner: Rotation
      {
        source="hatchGunner";
        selection="hatch_gunner";
        axis="hatch_gunner_axis";
        memory=1;
        animPeriod=0;
        angle0="rad 0";
        angle1="rad -90";
      };
      class HatchDriver: HatchGunner
      {
        source="hatchdriver";
        selection="hatch_driver";
        axis="hatch_driver_axis";
        angle1="rad 90";
      };
      class driver_seat: HatchGunner
      {
        source="hatchdriver";
        selection="driver_seat";
        axis="driver_seat_axis";
        type="translation";
        memory=1;
        minValue=0.950000;
        maxValue=1;
        offset0=0;
        offset1=1.050000;
      };
      class damageHide
      {
        type="hide";
        source="damage";
        selection="damageHide";
      };
      class DamageVez:damageHide
      {
        selection="DamageVez";
      };
      class DamageGunner:damageHide
      {
        selection="hatch_gunner";
      };
      class DamageDriver:damageHide
      {
        selection="hatch_driver";
      };
      class daylights
      {
        type="hide";
        source="rpm";
        selection="daylights";
        minValue=-0.8;
        maxValue=0.2;
        unhidevalue=1;
        sourceAddress="clamp";
      };
      
      class reverse_light
      {
        type="Hide";
        selection="Light_Reverse";
        sourceAddress="clamp";
        source="Gear";
        minValue = -1;
        maxValue = 0;
        hideValue = "0.2";  
      };    
            

    };
  };
  class CUP_BTR90:CUP_BTR90Base
  {
    class Animations:Animations
    {
      class ObsTurret
      {
        type="rotationY";
        source="obsTurret";
        selection="OtocVelitele";
        axis="OsaVelitele";
        animPeriod=0;
        minValue="rad -360";
        maxValue="rad +360";
        angle0="rad -360";
        angle1="rad +360";
      };
      class ObsGun: ObsTurret
      {
        type="rotationX";
        source="obsGun";
        selection="OtocHlavenVelitele";
        axis="OsaHlavneVelitele";
      };
      class HatchCommander: HatchGunner
      {
        source="hatchCommander";
        selection="hatch_commander";
        axis="hatch_commander_axis";
        angle1="rad -90";
      };
      class recoil_BEGIN
      {
        type="translation";
        source="recoil_source";
        selection="RecoilHlaven";
        axis="RecoilHlaven_axis";
        memory=1;
        minValue=0.5;
        maxValue=0.8;
        offset0=0;
        offset1=-0.2;
      };
      class recoil_END:recoil_BEGIN
      {
        minValue=0.85;
        maxValue=1;
        offset0=0;
        offset1=0.2;
      };
      class DamageCommander:damageHide
      {
        selection="OtocVelitele";
      };

      class zaslehROT_2A42 {
        type="rotationZ";
        source="muzzle_rot_2A42";
        sourceAddress="mirror";
        selection="muzzleFlash2A42";
        axis="";
        centerFirstVertex=true;
        minValue=0;
        maxValue=4;
        angle0="rad 0";
        angle1="rad 360";
        memory = 1;
      };
      
      class zaslehHIDE_2A42
      {
        type = "hide";
        selection = "muzzleFlash2A42";
        source = "muzzle_hide_2A42";
        minValue = 0;
        maxValue = 1;
        hideValue = 0;
        unhideValue = 0.3;
      };
      
      
      class zaslehROT_GMG {
        type="rotationZ";
        source="muzzle_rot_GMG";
        sourceAddress="mirror";
        selection="muzzleFlashGMG";
        axis="";
        centerFirstVertex=true;
        minValue=0;
        maxValue=4;
        angle0="rad 0";
        angle1="rad 360";
        memory = 1;
      };
      
      class zaslehHIDE_GMG
      {
        type = "hide";
        selection = "muzzleFlashGMG";
        source = "muzzle_hide_GMG";
        minValue = 0;
        maxValue = 1;
        hideValue = 0;
        unhideValue = 0.3;
      };
    
    };
  };
  
  
  class CUP_BTR90_HQ: CUP_BTR90Base
  {
    skeletonName="CUP_BTRHQSkeleton";
    sectionsInherit="CUP_BTR90";
    sections[]=
    {
      "Camo3",
      "muzzleFlashPKT"
    };
    class Animations:Animations
    {
      class HatchGunner: Rotation
      {
        source="hatchGunner";
        selection="hatch_gunner";
        axis="hatch_gunner_axis";
        memory=1;
        animPeriod=0;
        angle0="rad 0";
        angle1="rad 100";
      };
      class Antena1: Rotation
      {
        source = "Antena1";
        selection="Antena1";
        axis="Antena1_axis";
        memory=1;
        animPeriod=0;
        minvalue=0;
        maxvalue=1;
        angle0="rad 90";
        angle1="rad 0";
      };
      class Antena2: Antena1
      {
        selection="Antena2";
        source = "Antena2";
        axis="Antena2_axis";
        angle0="rad -180";
        angle1="rad 0";
      };
      class Antena3: Antena1
      {
        selection="Antena3";
        source = "Antena3";
        axis="Antena3_axis";
      };
      class Antena4: Antena1
      {
        selection="Antena4";
        axis="Antena4_axis";
        minvalue=0;
        source = "Antena4";
        maxvalue=0.5;
        angle0="rad 120";
        angle1="rad 0";
      };
      class Antena5: Antena1
      {
        selection="Antena5";
        axis="Antena5_axis";
        minvalue=0;
        source = "Antena5";
        maxvalue=5/2;
        angle0="rad 85";
        angle1="rad 0";
      };
      class Pnevmo1: Antena1
      {
        selection="Pnevmo1";
        axis="Pnevmo1_axis";
        angle0="rad 101";
        angle1="rad 0";
        source = "Pnevmo1";
      };
      class Pnevmo2: Antena1
      {
        selection="Pnevmo2";
        axis="Pnevmo2_axis";
        angle0="rad 30";
        angle1="rad 0";
        source = "Pnevmo2";
      };
      
      class zaslehROT_PKT {
        type="rotationZ";
        source="muzzle_rot_PKT";
        sourceAddress="mirror";
        selection="muzzleFlashPKT";
        axis="";
        centerFirstVertex=true;
        minValue=0;
        maxValue=4;
        angle0="rad 0";
        angle1="rad 360";
        memory = 1;
      };
    };