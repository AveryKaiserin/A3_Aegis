class CfgSkeletons
{
	class Default {};
	class exp_M32: Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = 
		{
			"trigger","",
			"reload","",
			"drum","reload",
			"grenade1","drum",
			"grenade2","drum",
			"grenade3","drum",
			"grenade4","drum",
			"grenade5","drum",
			"grenade6","drum",
			"safety_catch",""
		};
	};	
	class exp_Mk13: Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = 
		{
			"trigger","",
			"grenade","barrel",
			"barrel","",
			"grip","barrel",
			"release",""
		};
	};	
	class exp_M79: Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = 
		{
			"trigger","",
			"barrel","",
			"grenade","barrel",
			"bolt","",
			"safety",""
		};
	};
};

class CfgModels
{
	class Default
	{
		sectionsInherit = "";
		sections[] = {};
		skeletonName = "";
	};
	class M32: Default
	{
		skeletonName = "exp_M32";
		sections[] = {"zasleh"};
		sectionsInherit = "";
		
		class Animations
		{
    // Rotate drum after each shot  
			class trigger
			{
				type = "rotation";
				source="reload";
				selection = "trigger";
				axis = "trigger_axis";
				minValue = "0";
				maxValue = ".5";
				angle0 = 0;
				angle1 = "rad 40";
			};
			class rev
			{
				type = "rotation";
				source="revolving";
				selection = "drum";
				axis = "drum_axis";
				minValue = "0";
				maxValue = "1";
				sourceadress="loop";
				angle0 = 0;
				angle1 = "rad 360";
			};
			// hide grenades when reloading
			class reload_hide1
			{
				type="hide";
				source="reloadMagazine";
				selection="grenade1";
				minValue=0;
				maxValue=.5;
				sourceAddress="mirror";
				hideValue=".2+random .8";
			};
			class reload_hide2: reload_hide1
			{
				selection="grenade2";
			//	hideValue=.33;
			};
			class reload_hide3: reload_hide2
			{
				selection="grenade3";
			};
			class reload_hide4: reload_hide2
			{
				selection="grenade4";
			};
			class reload_hide5: reload_hide2
			{
				selection="grenade5";
			};
			class reload_hide6: reload_hide2
			{
				selection="grenade6";
			};
			// flip outwards when reloading
			class reload_open : rev
			{
				source = "reloadMagazine";
				selection = "reload";
				axis = "reload_axis";
				sourceadress="clamp";
				angle0 = "0";
				angle1 = "-2.5";
				minValue="0";
				maxValue=".10";
			};
			class reload_close : reload_open
			{
				angle0 = "0";
				angle1 = "2.5";
				minValue=".9";
				maxValue="1";
			};
			class drum_wobble1:rev
			{
				type = "rotation";
				source="reloadMagazine";
				sourceadress="loop";
				minValue="0";
				maxValue=".15";
				angle0 = "0";
				angle1 = "((round(random 2))*(rad (360/6)))";
			};
			class drum_wobble2:drum_wobble1
			{
				maxValue=".3";
			};
			class drum_wobble3:drum_wobble1
			{
				maxValue=".45";
			};
			class drum_wobble4:drum_wobble1
			{
				maxValue=".6";
			};
			class drum_wobble5:drum_wobble1
			{
				maxValue=".75";
			};
			class drum_wobble6:drum_wobble1
			{
				maxValue=".9";
				angle1 = "(rad (360/6))";
			};
			/*
			class drum_wobble7:drum_wobble1
			{
				maxValue=".7";
			};
			class drum_wobble8:drum_wobble1
			{
				maxValue=".8";
			};
			class drum_wobble9:drum_wobble1
			{
				maxValue=".9";
			};
			class drum_wobble10:drum_wobble1
			{
				maxValue="1";
			};
			*/
		#define k (rad 4)
		#define wobbleAngle k
		#define wobbleAngle2 (-k)
			class reload_wobble1:reload_open
			{
				type = "rotation";
				source="reloadMagazine";
				//sourceadress="clamp";
				minValue="0";
				maxValue=".1";
				angle0 = "0";
				angle1 = wobbleAngle;
			};
			class reload_wobble2:reload_wobble1
			{
				maxValue=".2";
			};
			class reload_wobble3:reload_wobble1
			{
				maxValue=".3";
			};
			class reload_wobble4:reload_wobble1
			{
				maxValue=".4";
			};
			class reload_wobble5:reload_wobble1
			{
				maxValue=".5";
			};
			class reload_wobble6:reload_wobble1
			{
				minValue=".5";
				angle0 = "0";
				angle1 = wobbleAngle2;
				maxValue=".6";
			};
			class reload_wobble7:reload_wobble6
			{
				maxValue=".7";
			};
			class reload_wobble8:reload_wobble6
			{
				maxValue=".8";
			};
			class reload_wobble9:reload_wobble6
			{
				maxValue=".9";
			};
			class reload_wobble10:reload_wobble6
			{
				maxValue="1";
			};
			
			class safety
			{
				type = "rotation";
				source="revolve";
				selection = "safety_catch";
				axis = "safety_catch_axis";
				minValue = "0.95";
				maxValue = "1";
				sourceadress="loop";
				angle0 = 0;
				angle1 = "rad 110";
			};		
		};
	};
	class Mk13: Default
	{
		skeletonName = "exp_Mk13";
		sections[] = {"zasleh"};
		sectionsInherit = "";
		class Animations
		{
		class reload_hide
			{
				type="hide";
				source="reloadMagazine";
				selection="grenade";
				minValue=0;
				maxValue=.5;
				sourceAddress="mirror";
				hideValue=".45+random .3";
			};
			class trigger
			{
				type = "translation";
				source="reload";
				selection = "trigger";
				axis = "trigger_axis";
				minValue = "0";
				maxValue = ".01";
				Offset0 = "0";
				Offset1 = "1";
			};
			class grip
			{
				type = "translation";
				source="ReloadMagazine";
				selection = "grip";
				axis = "grip_axis";
				minValue = "0";
				maxValue = ".05";
				Offset0 = "0";
				Offset1 = "1";
			};
			class barrel_slide
			{
				type = "translation";
				source="ReloadMagazine";
				selection = "barrel";
				axis = "grip_axis";
				minValue = ".05";
				maxValue = ".2";
				Offset0 = "0";
				Offset1 = "4";
			};
			class barrel_rotate
			{
				type = "rotation";
				source="ReloadMagazine";
				selection = "barrel";
				axis = "barrel_axis";
				minValue="0.2";
				maxValue="0.22+ random 0.05";
				angle0="0.0";
				angle1="(rad -25)";
			};
			
			class barrel_rotate_b:barrel_rotate
			{
				minValue="0.79+ random 0.05";
				maxValue="0.87";
				angle1="(rad 25)";
			};
			class barrel_slide_b:barrel_slide
			{
				minValue = ".87";
				maxValue = ".9+random 0.1";
				Offset1 = "-4";
			};
			class grip_b:grip
			{
				minValue = "0.87+ random 0.1";
				maxValue = "1";
				Offset1 = "-1";
			};
		};
	};
	class M79: Default
	{
		skeletonName = "exp_M79";
		sections[] = {"zasleh"};
		sectionsInherit = "";
		class Animations
		{
			class reload_hide
			{
				type="hide";
				source="reloadMagazine";
				selection="grenade";
				minValue=0;
				maxValue=.5;
				sourceAddress="mirror";
				hideValue=".45+random .3";
			};
			// flip downwards when reloading
			class reload_open
			{
				type = "rotation";
				source = "reloadMagazine";
				selection = "barrel";
				axis = "barrel_axis";
				sourceadress="clamp";
				angle0 = "0";
				angle1 = "-1";
				minValue=".05";
				maxValue=".1+random .05";
			};
			class reload_close : reload_open
			{
				angle0 = "0";
				angle1 = "1";
				minValue=".85-random .2";
				maxValue=".95- random .02";
			};
	//	#define k (rad 4)
	//	#define wobbleAngle k
	//	#define wobbleAngle2 (-k)
			class reload_wobble1:reload_open
			{
				type = "rotation";
				source="reloadMagazine";
				minValue="0.05";
				maxValue=".1";
				angle0 = "0";
				angle1 = wobbleAngle;
			};
			class reload_wobble2:reload_wobble1
			{
				maxValue=".2";
			};
			class reload_wobble3:reload_wobble1
			{
				maxValue=".3";
			};
			class reload_wobble4:reload_wobble1
			{
				maxValue=".4";
			};
			class reload_wobble5:reload_wobble1
			{
				maxValue=".5";
			};
			class reload_wobble6:reload_wobble1
			{
				minValue=".5";
				angle0 = "0";
				angle1 = wobbleAngle2;
				maxValue=".8";
			};
			class reload_wobble7:reload_wobble6
			{
				minValue=".55";
			};
			class reload_wobble8:reload_wobble6
			{
				minValue=".6";
			};
			class reload_wobble9:reload_wobble6
			{
				minValue=".65";
			};
			class reload_wobble10:reload_wobble6
			{
				minValue=".7";
			};
			
			class bolt_open
			{
				type = "rotation";
				source="ReloadMagazine";
				selection = "bolt";
				axis = "bolt_axis";
				minValue = "0";
				maxValue = "0.01+random 0.04";
				angle0 = "0";
				angle1 = "rad 50";
			};
			class bolt_close:bolt_open
			{
				minValue = "0.95";
				maxValue = "1";
				angle1 = "rad -50";
			};
			class safety
			{
				type = "translation";
				source="revolve";
				selection = "safety";
				axis = "safety_axis";
				minValue = "0";
				maxValue = "0.001";
				Offset0 = "1";
				Offset1 = "0";
			};
			class trigger
			{
				type = "rotation";
				source="reload";
				selection = "trigger";
				axis = "trigger_axis";
				minValue = "0";
				maxValue = ".1";
				angle0 = 0;
				angle1 = "rad -15";
			};		
		};
	};
};